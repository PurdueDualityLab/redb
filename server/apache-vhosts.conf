# Virtual Hosts
#
# Required modules: mod_log_config

# If you want to maintain multiple domains/hostnames on your
# machine you can setup VirtualHost containers for them. Most configurations
# use only name-based virtual hosts so the server doesn't need to worry about
# IP addresses. This is indicated by the asterisks in the directives below.
#
# Please see the documentation at
# <URL:http://httpd.apache.org/docs/2.4/vhosts/>
# for further details before you try to setup virtual hosts.
#
# You may use the command line option '-S' to verify your virtual host
# configuration.

#
# VirtualHost example:
# Almost any Apache directive may go into a VirtualHost container.
# The first VirtualHost section is used for all requests that do not
# match a ServerName or ServerAlias in any <VirtualHost> block.
#
# <VirtualHost *:80>
#     ServerAdmin webmaster@dummy-host.example.com
#     DocumentRoot "/usr/local/apache2/docs/dummy-host.example.com"
#     ServerName dummy-host.example.com
#     ServerAlias www.dummy-host.example.com
#     ErrorLog "logs/dummy-host.example.com-error_log"
#     CustomLog "logs/dummy-host.example.com-access_log" common
# </VirtualHost>

<VirtualHost *:80>
    ServerAdmin cmsale@purdue.edu
    ServerName queryapi.regextools.io
    ErrorLog "logs/queryapi.regextools.io-error_log"
    CustomLog "logs/queryapi.regextools.io-access_log" common

    # Setup proxying with some basic load balancing
    # <Proxy balancer://api_set>
    #     BalancerMember http://localhost:8080
    #     BalancerMember http://localhost:8081
    #     ProxySet lbmethod=bytraffic
    # </Proxy>

    # ProxyPass "/" "balancer://api_set"
    # ProxyPassReverse "/" "balancer://api_set"
    ProxyPass / http://localhost:8080/
    ProxyPassReverse / http://localhost:8080/
    # Header set Access-Control-Allow-Origin "*"
    # Header set Access-Control-Allow-Methods "GET, POST, PUT"
</VirtualHost>
